-- Retrieve the total number of orders placed.

SELECT COUNT(*) as total_pizza_ordered 
FROM orders;

-- Calculate the total revenue generated from pizza sales. 

SELECT 
    SUM(price * quantity) AS total_revenue
FROM
    orderdetails od
        JOIN
    pizzas p ON od.pizza_id = p.pizza_id;

-- Identify the highest-priced pizza.

SELECT 
    name
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
WHERE
    price IN (SELECT 
            MAX(price)
        FROM
            pizzas);

SELECT 
    name
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
ORDER BY price DESC
LIMIT 1;

-- Identify the most common pizza size ordered.

select size from
(select size,count(size) from orderdetails od
join pizzas p on od.pizza_id = p.pizza_id
group by size
order by 2 desc
limit 1)t;

select quantity,count(quantity) as quantity from orderdetails
group by quantity
order by 2 desc limit 1;

-- List the top 5 most ordered pizza types along with their quantities.
 
 select pizza_id,count(quantity) as quantity from orderdetails od
 group by pizza_id
 order by 2 desc
 limit 5;
 
 SELECT 
    pt.name, SUM(quantity) AS quantity
FROM
    orderdetails od
        JOIN
    pizzas p ON od.pizza_id = p.pizza_id
        JOIN
    pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY 2 DESC
LIMIT 5;

-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    category, SUM(quantity) as pizza_order_by_category
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    orderdetails od ON p.pizza_id = od.pizza_id
GROUP BY category
ORDER BY 2 DESC;

-- Determine the distribution of orders by hour of the day.

 SELECT 
    HOUR(order_time) AS hours, COUNT(order_id) AS order_count
FROM
    orders
GROUP BY HOUR(order_time)
ORDER BY 1; 
 
 --  find the category-wise distribution of pizzas.
 
 SELECT 
    category, SUM(quantity)
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    orderdetails od ON p.pizza_id = od.pizza_id
GROUP BY category
ORDER BY 2 DESC;

SELECT 
    category, COUNT(name) AS pizza_count_each_category
FROM
    pizza_types
GROUP BY category;
  
-- Group the orders by date and calculate the average number of pizzas ordered per day (doubt)

SELECT 
    ROUND(AVG(pizza_count))
FROM
    (SELECT 
        order_date, SUM(quantity) AS pizza_count
    FROM
        orderdetails od
    JOIN orders o ON od.order_id = o.order_id
    GROUP BY order_date) AS pizza_orders_quantity;

-- Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    pt.name, SUM(quantity * price)
FROM
    orderdetails od
        JOIN
    pizzas p ON od.pizza_id = p.pizza_id
        JOIN
    pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY 2 DESC
LIMIT 3;

-- Calculate the percentage contribution of each pizza type to total revenue.
/*with each_pizza as
(select name, sum(quantity*price) as each_pizza_type_spend from orderdetails od
join pizzas p on od.pizza_id = p.pizza_id
join pizza_types pt on p.pizza_type_id = pt.pizza_type_id
group by name)*/

-- select sum(each_pizza_type_spend) from each_pizza;-- 817860.0500000006, 32273.25 The Hawaiian Pizza

with each_pizza as
(select category, sum(quantity*price) as each_pizza_type_spend 
from orderdetails od
join pizzas p on od.pizza_id = p.pizza_id
join pizza_types pt on p.pizza_type_id = pt.pizza_type_id
group by category)

select category,
round(each_pizza_type_spend*100/
(select sum(each_pizza_type_spend) from each_pizza),2) as per_con
from each_pizza;


-- Analyze the cumulative revenue generated over time.

select order_date, round(sum(sum_revenue)over(order by order_date),2) as cum_revenue from
(select order_date,sum(od.quantity * p.price) as sum_revenue from orderdetails od
join pizzas p on od.pizza_id = p.pizza_id
join orders o on od.order_id = o.order_id
group by order_date) as revenue;


-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.

select name,category from
(select name,category,
dense_rank() over (partition by category order by category,name,sum(od.quantity*p.price) desc) as ranker
from orderdetails od
join pizzas p on od.pizza_id = p.pizza_id
join pizza_types pt on pt.pizza_type_id = p.pizza_type_id
group by category,name) pizzarank_table
where ranker < 4;